<?php

namespace App;

use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;

class Mail extends Model
{
    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = ['subject', 'body', 'sended', 'e_mail_id', 'user_id', 'readed',];

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function eMail()
    {
        return $this->belongsTo(EMail::class);
    }

    private static function inFolder(EMail $email, $datas)
    {
        foreach ($datas as $data) {
            if ($data->is_mail) {
                if ($email->e_mail === $data->data)
                    return true;
            } else
                if (stripos($email->e_mail, $data->data) !== false ||
                    stripos($email->name, $data->data) !== false) {
                    return true;
                }
        }
        return false;
    }

    private static function addToFolders(User $user, EMail $email, Mail $mail)
    {
        $folders = $user->folders->where('folder_name_id', '>', 4);
        foreach ($folders as $folder) {
            $rosters = $user->rosters->where('folder_id', $folder->id);
            if (Mail::inFolder($email, $rosters)) {
                $folder->quantity++;
                if (!$mail->readed) {
                    $folder->readed++;
                }
                $folder->save();
                FolderMail::create([
                    'mail_id' => $mail->id,
                    'folder_id' => $folder->id,
                    'subject' => $mail->subject,
                    'e_mail' => $email->e_mail,
                    'readed' => $mail->readed
                ]);
                continue;
            }
        }
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::created(function (Mail $mail) {
            $user = $mail->user;
            $email = $user->eMail;
            if ($mail->sended) {
                $email->sended++;
            } else
                $email->received++;
            $email->save();
            $email = '';
            $email = $mail->eMail;
            $folder = '';
            if ($mail->sended) {
                $idO = FolderName::where('name', 'outbox')->first()->id;
                $folder = Folder::where('folder_name_id', $idO)->where('user_id', $user->id)->first();
                $email->received++;

            } else {
                $junkeds = $user->folders->where('folder_name_id', 4)->first()->rosters;
                if (Mail::inFolder($email, $junkeds)) {
                    $idJ = FolderName::where('name', 'junked')->first()->id;
                    $folder = $user->folders->where('folder_name_id', $idJ)->first();
                } else {
                    $idI = FolderName::where('name', 'inbox')->first()->id;
                    $folder = $user->folders->where('folder_name_id', $idI)->first();
                    $email->sended++;
                    Mail::addToFolders($user, $email, $mail);
                }
            }
            $folder->quantity++;
            if (!$mail->readed) {
                $folder->readed++;
            }
            $folder->save();
            $email->save();
            FolderMail::create([
                'mail_id' => $mail->id,
                'folder_id' => $folder->id,
                'subject' => $mail->subject,
                'e_mail' => $email->e_mail,
                'readed' => $mail->readed,
                'recognized'=> $mail->recognized
            ]);
        });
    }

    public function files()
    {
        return $this->hasMany(File::class);
    }

    public function hourHumans()
    {
        Carbon::setLocale('es');
        return Carbon::parse($this->updated_at)->diffForHumans();
    }
}
